panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Minions2, colour="black", fill="red" ))+
labs(
title="Minion uccisi in relazione ai League Points",
subtitle = "Squadra Rossa",
x = "Media dei League Points della partita",
y = "Minions uccisi dalla squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "#F17D7D",
colour = "#F17D7D",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Minions1, colour="black", fill="blue" ))+
labs(
title="Minion uccisi in relazione ai League Points",
subtitle = "Squadra Blu",
x = "Media dei League Points della partita",
y = "Minions uccisi dalla squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "skyblue2",
colour = "skyblue2",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
loldataset <- loldataset %>%
mutate (Minions1 = t1p1_totalMinionsKilled + t1p2_totalMinionsKilled + t1p3_totalMinionsKilled + t1p4_totalMinionsKilled + t1p5_totalMinionsKilled)
loldataset <- loldataset %>%
mutate (Minions2 = t2p1_totalMinionsKilled + t2p2_totalMinionsKilled + t2p3_totalMinionsKilled + t2p4_totalMinionsKilled + t2p5_totalMinionsKilled)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Minions1, colour="black", fill="blue" ))+
labs(
title="Minion uccisi in relazione ai League Points",
subtitle = "Squadra Blu",
x = "Media dei League Points della partita",
y = "Minions uccisi dalla squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "skyblue2",
colour = "skyblue2",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Minions2, colour="black", fill="red" ))+
labs(
title="Minion uccisi in relazione ai League Points",
subtitle = "Squadra Rossa",
x = "Media dei League Points della partita",
y = "Minions uccisi dalla squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "#F17D7D",
colour = "#F17D7D",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
loldataset <- loldataset %>%
mutate (Minions1 = t1p1_damageDealtToTurrets + t1p2_damageDealtToTurrets + t1p3_damageDealtToTurrets + t1p4_damageDealtToTurrets + t1p5_damageDealtToTurrets)
loldataset <- loldataset %>%
mutate (Minions2 = t2p1_damageDealtToTurrets + t2p2_damageDealtToTurrets + t2p3_damageDealtToTurrets + t2p4_damageDealtToTurrets + t2p5_damageDealtToTurrets)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Minions1, colour="black", fill="blue" ))+
labs(
title="Minion uccisi in relazione ai League Points",
subtitle = "Squadra Blu",
x = "Media dei League Points della partita",
y = "Minions uccisi dalla squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "skyblue2",
colour = "skyblue2",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Minions2, colour="black", fill="red" ))+
labs(
title="Minion uccisi in relazione ai League Points",
subtitle = "Squadra Rossa",
x = "Media dei League Points della partita",
y = "Minions uccisi dalla squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "#F17D7D",
colour = "#F17D7D",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
loldataset <- loldataset %>%
mutate (killteam1 = t1p1_kills + t1p2_kills + t1p3_kills + t1p4_kills + t1p5_kills)
loldataset <- loldataset %>%
mutate (killteam2 = t2p1_kills + t2p2_kills + t2p3_kills + t2p4_kills + t2p5_kills)
loldataset <- loldataset %>%
mutate (deathteam1 = t1p1_deaths + t1p2_deaths + t1p3_deaths + t1p4_deaths + t1p5_deaths)
loldataset <- loldataset %>%
mutate (deathteam2 = t2p1_deaths + t2p2_deaths + t2p3_deaths + t2p4_deaths + t2p5_deaths)
loldataset <- loldataset %>%
mutate (Kd_Ratio_1 = killteam1 / deathteam1)
loldataset <- loldataset %>%
mutate (Kd_Ratio_2 = killteam2 / deathteam2)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = killteam1, colour="black", fill="blue" ))+
labs(
title="Uccisioni in rapporto ai League Points",
subtitle = "Squadra Blu",
x = "Media dei League Points della partita",
y = "Uccisioni della Squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "skyblue2",
colour = "skyblue2",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = killteam2, colour="black", fill="red" ))+
labs(
title="Uccisioni in rapporto ai League Points",
subtitle = "Squadra Rossa",
x = "Media dei League Points della partita",
y = "Uccisioni della Squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "#F17D7D",
colour = "#F17D7D",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
loldataset <- loldataset %>%
mutate (assistteam1 = t1p1_assists + t1p2_assists + t1p3_assists + t1p4_assists + t1p5_assists)
loldataset <- loldataset %>%
mutate (assistteam2 = t2p1_assists + t2p2_assists + t2p3_assists + t2p4_assists + t2p5_assists)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = assistteam1, colour="black", fill="blue" ))+
labs(
title="Assist in rapporto ai League Points",
subtitle = "Squadra Blu",
x = "Media dei League Points della partita",
y = "Assist della squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "skyblue2",
colour = "skyblue2",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = assistteam2, colour="black", fill="red" ))+
labs(
title="Assist in rapporto ai League Points",
subtitle = "Squadra Rossa",
x = "Media dei League Points della partita",
y = "Assist della squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "#F17D7D",
colour = "#F17D7D",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
loldataset <- loldataset %>%
mutate (Visionscore1 = t1p1_visionScore + t1p2_visionScore + t1p3_visionScore + t1p4_visionScore + t1p5_visionScore)
loldataset <- loldataset %>%
mutate (Visionscore2 = t2p1_visionScore + t2p2_visionScore + t2p3_visionScore + t2p4_visionScore + t2p5_visionScore)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Visionscore1, colour="black", fill="blue" ))+
labs(
title="Punti visione in relazione ai League Points",
subtitle = "Squadra Blu",
x = "Media dei League Points della partita",
y = "Punteggio visione della squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "skyblue2",
colour = "skyblue2",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Visionscore2, colour="black", fill="red" ))+
labs(
title="Punti visione in relazione ai League Points",
subtitle = "Squadra Rossa",
x = "Media dei League Points della partita",
y = "Punteggio visione della squadra"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "#F17D7D",
colour = "#F17D7D",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
loldataset <- loldataset %>%
mutate (Turretd1 = t1p1_damageDealtToTurrets + t1p2_damageDealtToTurrets + t1p3_damageDealtToTurrets + t1p4_damageDealtToTurrets + t1p5_damageDealtToTurrets)
loldataset <- loldataset %>%
mutate (Turretd2 = t2p1_damageDealtToTurrets + t2p2_damageDealtToTurrets + t2p3_damageDealtToTurrets + t2p4_damageDealtToTurrets + t2p5_damageDealtToTurrets)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Turretd1, colour="black", fill="blue" ))+
labs(
title="Danni alle torri",
subtitle = "Squadra Blu",
x = "Media dei League Points della partita",
y = "Danni alle torri"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "skyblue2",
colour = "skyblue2",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
ggplot(data = loldataset)+
geom_smooth(mapping = aes(x = average_lp, y = Turretd2, colour="black", fill="red" ))+
labs(
title="Danni alle torri",
subtitle = "Squadra Rossa",
x = "Media dei League Points della partita",
y = "Danni alle torri"
) +
scale_fill_identity(aesthetics="colour")+
scale_fill_identity(aesthetics="fill")+
theme(
panel.background = element_rect(fill = "#F17D7D",
colour = "#F17D7D",
size = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica")
)
VITTORIE <- data.frame(loldataset %>%
select(t1_win))
VITTORIE <- VITTORIE %>%
mutate(tot=as.numeric(row.names(VITTORIE)))
VITTORIE <- VITTORIE %>%
mutate(Vittorie=sum(t1_win))
VITTORIE <- VITTORIE %>%
filter(tot==14109)
VITTORIE <- VITTORIE %>%
add_row(t1_win = 1, tot= 14109, Vittorie=tot-7141)
VITTORIE <- VITTORIE %>%
mutate(percentuale= Vittorie/tot*100)
VITTORIE <- VITTORIE %>%
mutate(tot=as.numeric(row.names(VITTORIE)))
vtr <- VITTORIE %>%
ggplot(aes(x = tot, y = Vittorie, fill=c(high="skyblue2", low="#F17D7D"), width=0.95, height =2, text = paste("Vittorie:", Vittorie, "<br>","Percentuale:", percentuale, "%")))+  #factor(data) per permettere di inserire colori manualmente)
geom_col()+
theme(axis.title.x=element_blank(), #tre funzioni per eliminare titolo, segni e testo dalla linea delle ascisse (per inserimento immagini successivo)
axis.text.x =element_blank(),
axis.ticks.x=element_blank(),
)+
labs(
title="Numero di vittorie"
)+
scale_x_continuous(expand=c(0,0.75)) +
theme(
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica"),
legend.position = "none",
)
ggplotly(vtr, tooltip=("text"))
VITTORIE <- data.frame(loldataset %>%
select(t1_win))
VITTORIE <- VITTORIE %>%
mutate(tot=as.numeric(row.names(VITTORIE)))
VITTORIE <- VITTORIE %>%
mutate(Vittorie=sum(t1_win))
VITTORIE <- VITTORIE %>%
filter(tot==14109)
VITTORIE <- VITTORIE %>%
add_row(t1_win = 1, tot= 14109, Vittorie=tot-7141)
VITTORIE <- VITTORIE %>%
mutate(percentuale= Vittorie/tot*100)
VITTORIE <- VITTORIE %>%
mutate(tot=as.numeric(row.names(VITTORIE)))
vtr <- VITTORIE %>%
ggplot(aes(x = tot, y = Vittorie, fill=c(high="skyblue2", low="#F17D7D"), width=0.95, height =2, text = paste("Vittorie:", Vittorie, "<br>","Percentuale:", percentuale, "%")))+  #factor(data) per permettere di inserire colori manualmente)
geom_col()+
theme(axis.title.x=element_blank(), #tre funzioni per eliminare titolo, segni e testo dalla linea delle ascisse (per inserimento immagini successivo)
axis.text.x =element_blank(),
axis.ticks.x=element_blank(),
)+
labs(
title="Numero di vittorie"
)+
scale_x_continuous(expand=c(0,0.75)) +
theme(
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica"),
legend.position = "none",
)
ggplotly(vtr, tooltip=("text"))
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
loldataset2=read.csv("./riot_champion.csv" , sep=",")
loldataset=read.csv("./10.16_LeagueOfLegends_Games.csv", sep=";")
n<-dim(loldataset)[1]
loldataset<-loldataset[1:(n-1),]
imgs=file.path( ".", "champ" )
loldataset2 <- loldataset2 %>% mutate (Immagine = paste(imgs,image.full, sep = "/"))
VITTORIE <- data.frame(loldataset %>%
select(t1_win))
VITTORIE <- VITTORIE %>%
mutate(tot=as.numeric(row.names(VITTORIE)))
VITTORIE <- VITTORIE %>%
mutate(Vittorie=sum(t1_win))
VITTORIE <- VITTORIE %>%
filter(tot==14109)
VITTORIE <- VITTORIE %>%
add_row(t1_win = 1, tot= 14109, Vittorie=tot-7141)
VITTORIE <- VITTORIE %>%
mutate(percentuale= Vittorie/tot*100)
VITTORIE <- VITTORIE %>%
mutate(tot=as.numeric(row.names(VITTORIE)))
vtr <- VITTORIE %>%
ggplot(aes(x = tot, y = Vittorie, fill=c(high="skyblue2", low="#F17D7D"), width=0.95, height =2, text = paste("Vittorie:", Vittorie, "<br>","Percentuale:", percentuale, "%")))+  #factor(data) per permettere di inserire colori manualmente)
geom_col()+
theme(axis.title.x=element_blank(), #tre funzioni per eliminare titolo, segni e testo dalla linea delle ascisse (per inserimento immagini successivo)
axis.text.x =element_blank(),
axis.ticks.x=element_blank(),
)+
labs(
title="Numero di vittorie"
)+
scale_x_continuous(expand=c(0,0.75)) +
theme(
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica"),
legend.position = "none",
)
ggplotly(vtr, tooltip=("text"))
View(VITTORIE)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
loldataset2=read.csv("./riot_champion.csv" , sep=",")
loldataset=read.csv("./10.16_LeagueOfLegends_Games.csv", sep=";")
n<-dim(loldataset)[1]
loldataset<-loldataset[1:(n-1),]
imgs=file.path( ".", "champ" )
loldataset2 <- loldataset2 %>% mutate (Immagine = paste(imgs,image.full, sep = "/"))
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
loldataset2=read.csv("./riot_champion.csv" , sep=",")
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
loldataset2=read.csv("./riot_champion.csv" , sep=",")
loldataset=read.csv("./10.16_LeagueOfLegends_Games.csv", sep=";")
n<-dim(loldataset)[1]
loldataset<-loldataset[1:(n-1),]
imgs=file.path( ".", "champ" )
loldataset2 <- loldataset2 %>% mutate (Immagine = paste(imgs,image.full, sep = "/"))
VITTORIE <- data.frame(loldataset %>%
select(t1_win))
warnings()
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
loldataset2=read.csv("./riot_champion.csv" , sep=",")
loldataset=read.csv("./10.16_LeagueOfLegends_Games.csv", sep=";")
n<-dim(loldataset)[1]
loldataset<-loldataset[1:(n-1),]
imgs=file.path( ".", "champ" )
loldataset2 <- loldataset2 %>% mutate (Immagine = paste(imgs, image.full, sep = "/"))
library
library("magrittr")
library("knitr")
library("kableExtra")
library("tidyverse")
library("extrafont")
library("ggplot2")
library("gapminder")
library("plyr")
library("plotly")
library("tidyverse")
library("htmlwidgets")
library("grid")
library("png")
library("ggimage")
library("patchwork")
library("cowplot")
library("ggridges")
library("scales")
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
loldataset2=read.csv("./riot_champion.csv" , sep=",")
loldataset=read.csv("./10.16_LeagueOfLegends_Games.csv", sep=";")
n<-dim(loldataset)[1]
loldataset<-loldataset[1:(n-1),]
imgs=file.path( ".", "champ" )
loldataset2 <- loldataset2 %>% mutate (Immagine = paste(imgs, image.full, sep = "/"))
VITTORIE <- data.frame(loldataset %>%
select(t1_win))
VITTORIE <- VITTORIE %>%
mutate(tot=as.numeric(row.names(VITTORIE)))
VITTORIE <- VITTORIE %>%
mutate(Vittorie=sum(t1_win))
VITTORIE <- VITTORIE %>%
filter(tot==14109)
VITTORIE <- VITTORIE %>%
add_row(t1_win = 1, tot= 14109, Vittorie=tot-7141)
VITTORIE <- VITTORIE %>%
mutate(percentuale= Vittorie/tot*100)
VITTORIE <- VITTORIE %>%
mutate(tot=as.numeric(row.names(VITTORIE)))
vtr <- VITTORIE %>%
ggplot(aes(x = t1_win, y = Vittorie, fill=c(high="skyblue2", low="#F17D7D"), width=0.95, height =2, text = paste("Vittorie:", Vittorie, "<br>", "Percentuale:", percentuale, "%")))+
geom_col()+
theme(axis.title.x=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x=element_blank(),
)+
labs(
title="Numero di vittorie"
)+
scale_x_continuous(expand=c(0,0.75)) +
theme(
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
colour = "grey"),
text=element_text(size=10,  family="Helvetica"),
legend.position = "none",
)
ggplotly(vtr, tooltip=("text"))
